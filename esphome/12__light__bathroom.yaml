<<: !include templates/sonoff_light_cw.yaml

substitutions:
  host: light_bathroom
  area: Bathroom
  ipv4: 10.0.0.12

fan:

- platform: binary
  output: output_1
  id: fan_1
  name: $area Fan

switch:

- platform: template
  id: switch_1
  lambda: return digitalRead(12);
  on_turn_on:
  - lambda: ESPNow.send("pub fan_bathroom on");
  on_turn_off:
  - lambda: ESPNow.send("pub fan_bathroom off");

- platform: template
  id: switch_2
  lambda: |-
    return digitalRead(1) || digitalRead(3);
  on_turn_on:
  - lambda: ESPNow.send("pub light_bathroom on");
  on_turn_off:
  - lambda: ESPNow.send("pub light_bathroom off");

custom_component:
  lambda: |-
    ESPNow.begin();
    ESPNow.on("set light_bathroom toggle", []() {
      id(light_1)->toggle().perform();
    });
    ESPNow.on("set fan_bathroom toggle", []() {
      id(switch_1)->toggle();
    });
    ESPNow.on("req bathroom", []() {
      if (digitalRead(12)) {
        ESPNow.send("pub fan_bathroom on");
      } else {
        ESPNow.send("pub fan_bathroom off");
      }
      if (digitalRead(1) || digitalRead(3)) {
        ESPNow.send("pub light_bathroom on");
      } else {
        ESPNow.send("pub light_bathroom off");
      }
    });
    return {};
