substitutions:
  name: bedroom
  area: Bedroom

<<: !include share/common.yaml

wifi:
  <<: !include share/wifi.yaml

esphome:
  <<: !include share/esp8285.yaml

status_led:
  pin:
    number: 13
    inverted: true

globals:
  - id: is_occupied
    type: bool
    initial_value: 'false'

script:
  - id: set_occupied
    then:
      - lambda: |-
          id(occupancy_1).publish_state(true);
  - id: debounce_off
    then:
      - globals.set:
          id: is_occupied
          value: 'true'
      - if:
          condition:
            - script.is_running: debounce_off
          then:
            - script.stop: debounce_off
      - delay: 10s
      - if:
          condition:
            binary_sensor.is_off: motion_1
          then:
            - globals.set:
                id: is_occupied
                value: 'false'
            - lambda: |-
                id(occupancy_1).publish_state(false);
          else:
            - script.execute: debounce_off

switch:
  - platform: template
    name: ${area} Automation
    id: allow_automation
    restore_state: true
    assumed_state: true
    optimistic: true

binary_sensor:
    
  - platform: homeassistant
    id: motion_1
    name: ${area} Motion
    entity_id: binary_sensor.wyzesense_778c0ea5
    device_class: motion
    on_release: # motion on
      - script.execute: set_occupied
    on_press: # motion off
      - script.execute: debounce_off

  - platform: homeassistant
    id: door_1
    name: ${area} Door
    entity_id: binary_sensor.wyzesense_777ef4c8
    device_class: door
    on_state:
      - script.execute: debounce_off

  - platform: homeassistant
    id: activate_1
    name: ${area} Activation
    entity_id: binary_sensor.wyzesense_778305f1
    on_state:
      - script.execute: debounce_off
  
  - platform: template
    id: occupancy_1
    name: ${area} Occupancy
    device_class: occupancy
    lambda: |-
      return !!id(is_occupied);
  
  - platform: gpio
    pin:
      number: 0 # button pin
      inverted: true
    name: ${area} Button
    internal: true
    on_press: {}

power_supply:
  
  - id: psu_1
    enable_time: 20ms
    keep_on_time: 5s
    pin: 12 # relay pin

output:
  
  - platform: esp8266_pwm
    id: output_1
    pin: 1 # tx pin
    power_supply: psu_1
    frequency: 500hz
  
  - platform: esp8266_pwm
    id: output_2
    pin: 3 # rx pin
    power_supply: psu_1
    frequency: 500hz

light:
  
  - platform: cwww
    id: light_1
    name: ${area} Light
    cold_white: output_1
    warm_white: output_2
    cold_white_color_temperature: 6000 K
    warm_white_color_temperature: 3000 K
    default_transition_length: 2s


